services:
  demeter-tunnel:
    container_name: demeter-tunnel-${NETWORK}
    build:
      context: .
      dockerfile: Dockerfile.demeter
    environment:
      - PORT_NAME=${DEMETER_NODE_NAME}
      - NAMESPACE=${DEMETER_NAMESPACE}
      - API_KEY=${DEMETER_API_KEY}
    restart: unless-stopped
    volumes:
      - "${SCRIPTS_DIR}/config:/tunnel"
    networks:
      hydra-network:
  hydra-node:
    container_name: hydra-node-${NETWORK}
    image: ${HYDRA_IMAGE}
    restart: unless-stopped
    depends_on:
      - demeter-tunnel
    command:
      [
        "--node-id",
        "${NODE_ID}",
        "--listen",
        "${LISTEN_HOST}:${LISTEN_PORT}",
        "--api-host",
        "${API_HOST}",
        "--api-port",
        "${API_PORT}",
        "--hydra-signing-key",
        "/preprod/keys/${NODE_ID}.hydra.sk",
        "--persistence-dir",
        "/preprod/hydra",
        "--ledger-protocol-parameters",
        "/preprod/config/protocol-parameters.json",
        "--cardano-signing-key",
        "/preprod/keys/${NODE_ID}.cardano.sk",
        "--node-socket",
        "/preprod/config/node.socket",
        "--testnet-magic",
        "${HYDRA_NETWORK_ID}",
        "--hydra-scripts-tx-id",
        "${HYDRA_TX_ID}"
      ]
    ports:
      - "${LISTEN_PORT}:${LISTEN_PORT}"
      - "${API_PORT}:${API_PORT}"
    volumes:
      - "${SCRIPTS_DIR}:/preprod"
    networks:
      hydra-network:
  hydra-trp:
    container_name: hydra-trp-${NETWORK}
    image: ${HYDRA_TRP_IMAGE}
    restart: always
    depends_on:
      - hydra-node
    ports:
      - "${TRP_PORT}:${TRP_PORT}"
    environment:
      - RUST_LOG=debug
    volumes:
      - "${SCRIPTS_DIR}/config:/etc/tx3hydra"
    networks:
      hydra-network:
networks:
  hydra-network:
    name: hydra-network-${NETWORK}
    driver: bridge